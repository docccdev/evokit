@import './mixins.sss'

@custom-media --ek-image-media-small only screen and (min-width: 480px)
@custom-media --ek-image-media-medium only screen and (min-width: 768px)
@custom-media --ek-image-media-large only screen and (min-width: 960px)
@custom-media --ek-image-media-wide only screen and (min-width: 1200px)
@custom-media --ek-image-media-huge only screen and (min-width: 1400px)

:root
    // prop 'image-round'
    --ek-image-round-xxs: 2px
    --ek-image-round-xs: 4px
    --ek-image-round-s: 6px
    --ek-image-round-m: 8px
    --ek-image-round-l: 10px
    --ek-image-round-xl: 12px
    --ek-image-round-xxl: 14px

.image
    display: inline
    outline: none
    border: 0
    max-width: 100%
    max-height: 100%

    &[alt]
        word-wrap: break-word
        word-break: break-word
        hyphens: auto

/**
 * Display:
 *
 *  - image_display_inline
 *  - image_display_none
 *
 **/

@each $value in (inline, none)
    @mixin media .image_display_$(value)
        display: $value

/**
 * Horizontal align:
 *
 *  - image_align_*
 *
 **/

@each $value in (left, center, right)
    @mixin media .image_align_$(value)
        @if $value == center
            float: none
            display: block
            margin-left: auto
            margin-right: auto
        @else
            float: $value

/**
 * Vertical align:
 *
 *  - image_valign_*
 *
 **/

@each $value in (baseline, bottom, middle, sub, super, text-bottom, text-top, top)
    @mixin media .image_valign_$(value)
        vertical-align: $value

/**
 * Mirror:
 *
 *  - image_mirror_*
 *
 **/

@mixin media .image_mirror_x
    transform: scaleX(-1)

@mixin media .image_mirror_y
    transform: scaleY(-1)

@mixin media .image_mirror_xy
    transform: scale(-1, -1)

/**
 * Fix:
 *
 *  - image_fit_*
 *
 **/

@each $value in (none, fill, contain, cover, scale-down)
    @mixin media .image_fit_$(value)
        object-fit: $value

/**
 * Width:
 *
 *  - image_width_*
 *
 **/

@each $to in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    @each $from in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
        @if $from < $to or ($from == 1 and $to == 1)
            @mixin media .image_width_$(from)-$(to)
                width: calc($from / $to * 100%)

@mixin media .image_width_auto
    width: auto

/**
 * Round:
 *
 *  - image_round_*
 *
 **/

@each $value in (none, xxs, xs, s, m, l, xl, xxl, full)
    @mixin media .image_round_$(value)
        @if $value == none
            border-radius: 0
        @else if $value == full
            border-radius: 50%
        @else
            border-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-top_$(value)
        @if $value == none
            border-top-left-radius: 0
            border-top-right-radius: 0
        @else if $value == full
            border-top-left-radius: 50%
            border-top-right-radius: 50%
        @else
            border-top-left-radius: var(--ek-image-round-$(value))
            border-top-right-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-right_$(value)
        @if $value == none
            border-top-right-radius: 0
            border-bottom-right-radius: 0
        @else if $value == full
            border-top-right-radius: 50%
            border-bottom-right-radius: 50%
        @else
            border-top-right-radius: var(--ek-image-round-$(value))
            border-bottom-right-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-bottom_$(value)
        @if $value == none
            border-bottom-left-radius: 0
            border-bottom-right-radius: 0
        @else if $value == full
            border-bottom-left-radius: 50%
            border-bottom-right-radius: 50%
        @else
            border-bottom-left-radius: var(--ek-image-round-$(value))
            border-bottom-right-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-left_$(value)
        @if $value == none
            border-top-left-radius: 0
            border-bottom-left-radius: 0
        @else if $value == full
            border-top-left-radius: 50%
            border-bottom-left-radius: 50%
        @else
            border-top-left-radius: var(--ek-image-round-$(value))
            border-bottom-left-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-top-left_$(value)
        @if $value == none
            border-top-left-radius: 0
        @else if $value == full
            border-top-left-radius: 50%
        @else
            border-top-left-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-top-right_$(value)
        @if $value == none
            border-top-right-radius: 0
        @else if $value == full
            border-top-right-radius: 50%
        @else
            border-top-right-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-bottom-right_$(value)
        @if $value == none
            border-bottom-right-radius: 0
        @else if $value == full
            border-bottom-right-radius: 50%
        @else
            border-bottom-right-radius: var(--ek-image-round-$(value))

    @mixin media .image_round-bottom-left_$(value)
        @if $value == none
            border-bottom-left-radius: 0
        @else if $value == full
            border-bottom-left-radius: 50%
        @else
            border-bottom-left-radius: var(--ek-image-round-$(value))

/**
 * Alt:
 *
 *  - image_alt_visible
 *  - image_alt_hidden
 *
 **/

@each $value in (visible, hidden)
    @mixin media .image_alt_$(value)
        &[alt]
            @if $value == visible
                font-size: inherit
            @else if $value == hidden
                font-size: 0
